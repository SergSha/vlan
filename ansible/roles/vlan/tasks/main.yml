---
# tasks file for vlan

- name: All Routers
  block:
  - name: All Routers | set up forward packages across routers
    lineinfile:
      path: /etc/sysctl.d/01-forwarding.conf
      line: net.ipv4.conf.all.forwarding=1
      owner: root
      group: root
      mode: '0644'
      create: yes

  - name: sysctl setting
    command: sysctl -p /etc/sysctl.d/{{ item }}
    loop:
    - "01-forwarding.conf"
  when: "'routers' in group_names"

- name: Stop Firewalld Service If Running One
  service:
    name: firewalld
    state: stopped
    enabled: no
  when: (ansible_os_family == "RedHat") and (ansible_facts.services["firewalld.service"] is defined) and (ansible_facts.services["firewalld.service"].state == "running")
#  when: ansible_os_family == "RedHat"

- name: All Redhat Servers | install packages on redhat
  yum:
    name: 
    - traceroute
    - tcpdump
    state: present
  when: ansible_os_family == "RedHat"

- name: All Debian Servers | install packages on debian
  apt:
    name: 
    - traceroute
    - tcpdump
    update_cache: yes
  when: ansible_os_family == "Debian"

- name: inetRouter
  block:
  - name: inetRouter | install iptables
    yum:
      name:
      - iptables
      - iptables-services
      state: present
      update_cache: true

  - name: inetRouter | comment lines with icmp-host-prohibited
    replace:
      path: /etc/sysconfig/iptables
      regexp: '^(.*)icmp-host-prohibited(.*)$'
      replace: '#\1'

  - name: inetRouter | iptables restart
    service:
      name: iptables
      state: restarted
      enabled: true

#   command: iptables -t nat -A POSTROUTING ! -d 192.168.0.0/16 -o eth0 -j MASQUERADE
  - name: inetRouter | add masquerade
    iptables:
      table: nat 
      chain: POSTROUTING
      out_interface: eth0
      destination: "! 192.168.0.0/16"
      jump: MASQUERADE

  - name: inetRouter | iptables save
    command: service iptables save

  - name: inetRouter | iptables restart
    service:
      name: iptables
      state: restarted
      enabled: true

  - name: inetRouter | template network config file of eth1
    template:
      src: ifcfg-eth1.j2
      dest: /etc/sysconfig/network-scripts/ifcfg-eth1
      owner: root
      group: root
      mode: 0644

  - name: inetRouter | template network config file of eth2
    template:
      src: ifcfg-eth2.j2
      dest: /etc/sysconfig/network-scripts/ifcfg-eth2
      owner: root
      group: root
      mode: 0644

  - name: inetRouter | template network config file of bond0
    template:
      src: ifcfg-bond0.j2
      dest: /etc/sysconfig/network-scripts/ifcfg-bond0
      owner: root
      group: root
      mode: 0644

  - name: inetRouter | set up route of bond0
    template:
      src: inetRouter-route-bond0.j2
      dest: /etc/sysconfig/network-scripts/route-bond0
      owner: root
      group: root
      mode: 0644
#    notify:
#    - network restart redhat

  - name: inetRouter | network restart redhat
    service:
      name: network
      state: restarted
  when: ansible_hostname == "inetRouter"

- name: centralRouter
  block:
  - name: centralRouter | disable default route
    lineinfile:
      path: /etc/sysconfig/network-scripts/ifcfg-eth0
      line: DEFROUTE=no

  - name: centralRouter | template network config file of eth1
    template:
      src: ifcfg-eth1.j2
      dest: /etc/sysconfig/network-scripts/ifcfg-eth1
      owner: root
      group: root
      mode: 0644

  - name: centralRouter | template network config file of eth2
    template:
      src: ifcfg-eth2.j2
      dest: /etc/sysconfig/network-scripts/ifcfg-eth2
      owner: root
      group: root
      mode: 0644

  - name: centralRouter | template network config file of bond0
    template:
      src: ifcfg-bond0.j2
      dest: /etc/sysconfig/network-scripts/ifcfg-bond0
      owner: root
      group: root
      mode: 0644

  - name: centralRouter | add default gateway
    lineinfile:
      path: /etc/sysconfig/network-scripts/ifcfg-bond0
      line: GATEWAY=192.168.255.1

  - name: centralRouter | comment lines with IPADDR
    replace:
      path: /etc/sysconfig/network-scripts/ifcfg-eth3
      regexp: '^(.*IPADDR.*)$'
      replace: '#\1'

  - name: centralRouter | comment lines with NETMASK
    replace:
      path: /etc/sysconfig/network-scripts/ifcfg-eth3
      regexp: '^(.*NETMASK.*)$'
      replace: '#\1'

  - name: centralRouter | template network config file of vlan100
    template:
      src: ifcfg-vlan100.j2
      dest: /etc/sysconfig/network-scripts/ifcfg-vlan100
      owner: root
      group: root
      mode: 0644

  - name: centralRouter | template network config file of vlan101
    template:
      src: ifcfg-vlan101.j2
      dest: /etc/sysconfig/network-scripts/ifcfg-vlan101
      owner: root
      group: root
      mode: 0644
#    notify:
#    - network restart redhat

  - name: centralRouter | network restart redhat
    service:
      name: network
      state: restarted
  when: ansible_hostname == "centralRouter"

- name: testServers and testClients
  block:
  - name: testServers and testClients | disable default route
    lineinfile:
      path: /etc/sysconfig/network-scripts/ifcfg-eth0
      line: DEFROUTE=no

  - name: testServers and testClients | comment lines with IPADDR
    replace:
      path: /etc/sysconfig/network-scripts/ifcfg-eth1
      regexp: '^(.*IPADDR.*)$'
      replace: '#\1'

  - name: testServers and testClients | comment lines with NETMASK
    replace:
      path: /etc/sysconfig/network-scripts/ifcfg-eth1
      regexp: '^(.*NETMASK.*)$'
      replace: '#\1'
  when: "'servers_all' in group_names"
#  when: "'routers' not in group_names"

- name: vlan100
  block:
  - name: vlan100 | template network config file of vlan100
    template:
      src: ifcfg-vlan100.j2
      dest: /etc/sysconfig/network-scripts/ifcfg-vlan100
      owner: root
      group: root
      mode: 0644
#    notify:
#    - network restart redhat

  - name: vlan100 | network restart redhat
    service:
      name: network
      state: restarted
  when: "'vlan100' in group_names"

- name: vlan101
  block:
  - name: vlan101 | template network config file of vlan101
    template:
      src: ifcfg-vlan101.j2
      dest: /etc/sysconfig/network-scripts/ifcfg-vlan101
      owner: root
      group: root
      mode: 0644
#    notify:
#    - network restart redhat

  - name: vlan101 | network restart redhat
    service:
      name: network
      state: restarted
  when: "'vlan101' in group_names"

- name: All Redhat Servers | network restart redhat
  service:
    name: network
    state: restarted

